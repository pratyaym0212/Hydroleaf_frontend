{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Deadpool/Hydroleaf_frontend/src/components/blog/blog.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\ninterface Blog {\n  id: number;\n  title: string;\n  content: string;\n  image: string;\n  reverse: boolean;\n}\n\nconst Blogs: React.FC = () => {\n  const [blogs, setBlogs] = useState<Blog[]>([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch('/api/blog');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched Blogs:', data); // Debugging line\n        setBlogs(data);\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  return (\n    <section id=\"blogs\">\n      <div className=\"section-content\">\n        <h2>Latest Blogs</h2>\n        {blogs.map((blog) => (\n          <div\n            key={blog.id}\n            className={`blog-container ${blog.reverse ? 'reverse' : ''}`}\n          >\n            <div className=\"blog-image-container\">\n              <Image\n                src={blog.image}\n                alt={`Image for ${blog.title}`}\n                className=\"blog-image\"\n                width={500}\n                height={300}\n                priority\n              />\n            </div>\n            <div className=\"blog-content\">\n              <h3>{blog.title}</h3>\n              <p>{blog.content}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Blogs;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAaA,MAAM,QAAkB;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,MAAM;8CAAa;oBACjB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;wBAC1D;wBACA,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,QAAQ,GAAG,CAAC,kBAAkB,OAAO,iBAAiB;wBACtD,SAAS;oBACX,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,yBAAyB;oBACzC;gBACF;;YAEA;QACF;0BAAG,EAAE;IAEL,qBACE,6LAAC;QAAQ,IAAG;kBACV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;8BAAG;;;;;;gBACH,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;wBAEC,WAAW,CAAC,eAAe,EAAE,KAAK,OAAO,GAAG,YAAY,IAAI;;0CAE5D,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAK,KAAK,KAAK;oCACf,KAAK,CAAC,UAAU,EAAE,KAAK,KAAK,EAAE;oCAC9B,WAAU;oCACV,OAAO;oCACP,QAAQ;oCACR,QAAQ;;;;;;;;;;;0CAGZ,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDAAI,KAAK,KAAK;;;;;;kDACf,6LAAC;kDAAG,KAAK,OAAO;;;;;;;;;;;;;uBAfb,KAAK,EAAE;;;;;;;;;;;;;;;;AAsBxB;GAjDM;KAAA;uCAmDS"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}